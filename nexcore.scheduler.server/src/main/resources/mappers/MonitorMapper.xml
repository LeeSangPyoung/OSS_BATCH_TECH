<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="nbs.monitor">

    <!-- ✅ AgentInfo ResultMap -->
	<resultMap id="AgentInfo-ResultMap" type="nexcore.scheduler.entity.AgentInfo">
	    <result property="id" column="AGENT_ID"/>
	    <result property="name" column="AGENT_NAME"/>
	    <result property="desc" column="AGENT_DESC"/>
	    <result property="ip" column="AGENT_IP"/>
	    <result property="port" column="AGENT_PORT"/>
	    <result property="runMode" column="RUN_MODE"/>
	    <result property="inUseYN" column="IN_USE"/>
	    <result property="baseDirectory" column="BASE_DIRECTORY"/>
	    <result property="osUserId" column="OS_USERID"/>
	    <result property="osPasswd" column="OS_PASSWD"/>
	    <result property="startCmd" column="START_CMD"/>
	    <result property="remoteStartType" column="REMOTE_START_TYPE"/>
	    <result property="maxRunningJob" column="MAX_RUNNING_JOB"/>
	    <result property="lastModifyTime" column="LAST_MODIFY_TIME"/>
	</resultMap>
	
	<resultMap id="JobNotify-ResultMap" type="nexcore.scheduler.entity.JobNotify">
	    <id property="id" column="NOTIFY_ID"/>
	    <result property="desc" column="NOTIFY_DESC"/>
	    <result property="jobIdExpression" column="JOB_ID_EXP"/>
	    <result property="when" column="NOTIFY_WHEN"/>
	    <result property="checkValue1" column="CHECK_VALUE1"/>
	    <result property="checkValue2" column="CHECK_VALUE2"/>
	    <result property="checkValue3" column="CHECK_VALUE3"/>
	    <result property="receivers" column="RECEIVERS"/>
	    <result property="lastModifyTime" column="LAST_MODIFY_TIME"/>
	</resultMap>
		

    <!-- ✅ 조건에 따른 AGENT 조회 -->
    <select id="selectAgentInfoByQuery" parameterType="map" resultMap="AgentInfo-ResultMap">
        SELECT * FROM NBS_AGENT
        <where>
            <if test="queryCondition != null and queryCondition != ''">
                ${queryCondition}
            </if>
        </where>
        <if test="orderBy != null and orderBy != ''">
            ${orderBy}
        </if>
    </select>
    
    <select id="selectJobNotifyByQuery" parameterType="map" resultMap="JobNotify-ResultMap">
	    SELECT * 
	    FROM NBS_NOTIFY
	    <where>
	        ${queryCondition} <!-- 동적 쿼리 -->
	    </where>
	    <if test="orderBy != null and orderBy != ''">
	        ${orderBy} <!-- 정렬 -->
	    </if>
	</select>
    
    <select id="selectJobNotifySendListForCount" parameterType="string" resultMap="JobNotifySendInfoForCount-ResultMap">
	    <!-- selectJobNotifySendListForCount -->
	    SELECT RECEIVER_ID, MAX(CREATE_TIME) AS SEND_TIME, COUNT(*) AS SEND_COUNT
	    FROM (
	        SELECT RECEIVER_ID, CREATE_TIME
	        FROM NBS_NOTIFY_SEND_LIST
	        WHERE JOB_EXECUTION_ID = #{jobExecutionId}
	        GROUP BY JOB_EXECUTION_ID, RECEIVER_ID, CREATE_TIME
	    ) TEMP_NOTIFY_COUNT
	    GROUP BY RECEIVER_ID
	</select>
    <resultMap id="JobNotifySendInfoForCount-ResultMap" type="java.util.HashMap">
	    <result property="receiverId" column="RECEIVER_ID" javaType="java.lang.String"/>
	    <result property="sendTime"   column="SEND_TIME"   javaType="java.lang.String"/>
	    <result property="sendCount"  column="SEND_COUNT"  javaType="java.lang.Integer"/>
	</resultMap>
	
	
	<select id="selectJobNotifySendList" parameterType="map" resultMap="JobNotifySendInfo-ResultMap">
	    <![CDATA[
	        SELECT A.*, B.OWNER, B.JOB_GROUP_ID, 
	               (SELECT PHONE FROM NBS_USER WHERE USER_NAME = B.OWNER) AS OWNER_PHONE,
	               C.JOB_INSTANCE_ID, C.START_TIME, C.END_TIME, C.OPERATOR_ID, C.OPERATOR_IP, 
	               (SELECT USER_NAME FROM NBS_USER WHERE USER_ID = C.OPERATOR_ID) AS OPERATOR_NAME
	        FROM NBS_NOTIFY_SEND_LIST A
	        JOIN NBS_JOB_DEF B ON A.JOB_ID = B.JOB_ID
	        JOIN NBS_JOB_EXE C ON A.JOB_EXECUTION_ID = C.JOB_EXECUTION_ID
	        WHERE (A.SEND_TIME IS NULL OR A.SEND_TIME < #{retryBaseTime}) /* BEFORE 1 MIN */
	          AND A.CREATE_TIME > #{fromCreateTime}
	          AND A.TRY_COUNT < #{maxTryCount}
	          AND A.SEND_STATE IN ('I', 'F', 'R') 
	          AND (PROC_SYSTEM_ID IS NULL OR PROC_SYSTEM_ID = #{procSystemId})
	        FETCH FIRST 100 ROWS ONLY
	    ]]>
	</select>
	
	<resultMap id="JobNotifySendInfo-ResultMap" type="nexcore.scheduler.entity.JobNotifySendInfo">
	    <result property="seqNo" column="SEQ_NO" javaType="java.lang.Long"/>
	    <result property="jobId" column="JOB_ID" javaType="java.lang.String"/>
	    <result property="jobInstanceId" column="JOB_INSTANCE_ID" javaType="java.lang.Long"/>
	    <result property="jobExecutionId" column="JOB_EXECUTION_ID" javaType="java.lang.Long"/>
	    <result property="jobDesc" column="JOB_DESC" javaType="java.lang.String"/>
	    <result property="agentNode" column="AGENT_NODE" javaType="java.lang.String"/>
	    <result property="jobGroupId" column="JOB_GROUP_ID" javaType="java.lang.String"/>
	    <result property="owner" column="OWNER" javaType="java.lang.String"/>
	    <result property="ownerTel" column="OWNER_PHONE" javaType="java.lang.String"/>
	    <result property="startTime" column="START_TIME" javaType="java.sql.Timestamp"/>
	    <result property="endTime" column="END_TIME" javaType="java.sql.Timestamp"/>
	    <result property="operatorId" column="OPERATOR_ID" javaType="java.lang.String"/>
	    <result property="operatorName" column="OPERATOR_NAME" javaType="java.lang.String"/>
	    <result property="operatorIp" column="OPERATOR_IP" javaType="java.lang.String"/>
	    <result property="returnCode" column="RETURN_CODE" javaType="java.lang.String"/>
	    <result property="errorMsg" column="ERROR_MSG" javaType="java.lang.String"/>
	    <result property="receiverId" column="RECEIVER_ID" javaType="java.lang.String"/>
	    <result property="receiverName" column="RECEIVER_NAME" javaType="java.lang.String"/>
	    <result property="recvType" column="RECV_TYPE" javaType="java.lang.String"/>
	    <result property="recvPoint" column="RECV_POINT" javaType="java.lang.String"/>
	    <result property="createTime" column="CREATE_TIME" javaType="java.sql.Timestamp"/>
	    <result property="sendState" column="SEND_STATE" javaType="java.lang.String"/>
	    <result property="sendTime" column="SEND_TIME" javaType="java.sql.Timestamp"/>
	    <result property="tryCount" column="TRY_COUNT" javaType="java.lang.Integer"/>
	    <result property="notifyId" column="NOTIFY_ID" javaType="java.lang.String"/>
	    <result property="checkValue1" column="CHECK_VALUE1" javaType="java.lang.String"/>
	    <result property="checkValue2" column="CHECK_VALUE2" javaType="java.lang.String"/>
	    <result property="checkValue3" column="CHECK_VALUE3" javaType="java.lang.String"/>
	    <result property="procSystemId" column="PROC_SYSTEM_ID" javaType="java.lang.String"/>
	</resultMap>
	<select id="selectUser" parameterType="string" resultMap="User-ResultMap">
	    SELECT A.*, B.USER_ID AS OWNER_USER_ID, B.AUTH_KIND, B.TARGET_OBJECT
	      FROM NBS_USER A LEFT JOIN NBS_USER_AUTH B
	        ON A.USER_ID = B.USER_ID
	     WHERE A.USER_ID = #{id}
	</select>
	
	<select id="selectUserByQuery" parameterType="map" resultMap="User-ResultMap">
	    SELECT A.*, B.USER_ID AS OWNER_USER_ID, B.AUTH_KIND, B.TARGET_OBJECT
	      FROM NBS_USER A LEFT JOIN NBS_USER_AUTH B
	        ON A.USER_ID = B.USER_ID
	      ${queryCondition}
	      ${orderBy}
	</select>
	<resultMap id="User-ResultMap" type="nexcore.scheduler.entity.User">
	    <id property="id" column="USER_ID"/>
	    <result property="password" column="USER_PASSWD"/>
	    <result property="name" column="USER_NAME"/>
	    <result property="desc" column="USER_DESC"/>
	    <result property="team1" column="TEAM1"/>
	    <result property="team2" column="TEAM2"/>
	    <result property="email" column="EMAIL"/>
	    <result property="phone" column="PHONE"/>
	    <result property="adminYN" column="IS_ADMIN"/>
	    <result property="operatorYN" column="IS_OPERATOR"/>
	    <result property="activeYN" column="IS_ACTIVE"/>
	    <result property="operateJobIdExp" column="OPER_JOB_ID_EXP"/>
	    <result property="createTime" column="CREATE_TIME"/>
	    <result property="lastModifyTime" column="LAST_MODIFY_TIME"/>
	    <collection property="authList" ofType="nexcore.scheduler.entity.UserAuth" resultMap="nbs.monitor.UserAuth-ResultMap"/>
	</resultMap>
	<resultMap id="UserAuth-ResultMap" type="nexcore.scheduler.entity.UserAuth">
	    <result property="userId" column="OWNER_USER_ID"/>
	    <result property="authKind" column="AUTH_KIND"/>
	    <result property="targetObject" column="TARGET_OBJECT"/>
	</resultMap>
		
	<!-- ■■■■■■■■■■■■■ ViewFilter ■■■■■■■■■■■■■=== -->

	<resultMap id="ViewFilter-ResultMap" type="nexcore.scheduler.entity.ViewFilter">
	    <id property="id" column="VF_ID"/>
	    <result property="name" column="VF_NAME"/>
	    <result property="team" column="VF_TEAM"/>
	    <result property="owner" column="VF_OWNER"/>
	    <result property="description" column="VF_DESC"/>
	    <result property="jobCount" column="JOB_COUNT"/>
	    <result property="lastModifyTime" column="LAST_MODIFY_TIME"/>
	</resultMap>
	
	<select id="selectViewFilter" parameterType="int" resultMap="ViewFilter-ResultMap">
	    SELECT * FROM NBS_VIEW_FILTER WHERE VF_ID = #{id}
	</select>
	
	<select id="selectViewFilterByQuery" parameterType="map" resultMap="ViewFilter-ResultMap">
	    SELECT * FROM NBS_VIEW_FILTER
	    ${queryCondition}
	    ${orderBy}
	</select>
	
	<select id="selectViewFilterJobList" parameterType="int" resultType="string">
	    SELECT JOB_ID FROM NBS_VIEW_FILTER_DTL WHERE VF_ID = #{id}
	</select>
	
	<select id="selectJobDefListByViewFilter" parameterType="int" resultMap="JobDefinition-ResultMap">
	    SELECT B.* 
	    FROM NBS_VIEW_FILTER_DTL A, NBS_JOB_DEF B
	    WHERE A.VF_ID = #{id} 
	      AND A.JOB_ID = B.JOB_ID
	</select>
	
	<insert id="insertViewFilter" parameterType="nexcore.scheduler.entity.ViewFilter">
	    INSERT INTO NBS_VIEW_FILTER
	           (VF_NAME, VF_TEAM, VF_OWNER, VF_DESC, JOB_COUNT, LAST_MODIFY_TIME)
	    VALUES (#{name}, #{team}, #{owner}, #{description}, #{jobCount}, #{lastModifyTime})
	</insert>
	
	<insert id="insertViewFilterJobList" parameterType="map">
	    INSERT INTO NBS_VIEW_FILTER_DTL
	           (VF_ID, JOB_ID)
	    VALUES (#{id}, #{jobId})
	</insert>
	
	<update id="updateViewFilter" parameterType="nexcore.scheduler.entity.ViewFilter">
	    UPDATE NBS_VIEW_FILTER
	       SET VF_NAME = #{name},
	           VF_TEAM = #{team},
	           VF_OWNER = #{owner},
	           VF_DESC = #{description},
	           JOB_COUNT = (SELECT COUNT(*) FROM NBS_VIEW_FILTER_DTL WHERE VF_ID = #{id}),
	           LAST_MODIFY_TIME = #{lastModifyTime}
	     WHERE VF_ID = #{id}
	</update>
	
	<update id="updateViewFilterJobCount" parameterType="map">
	    UPDATE NBS_VIEW_FILTER
	       SET JOB_COUNT = (SELECT COUNT(*) FROM NBS_VIEW_FILTER_DTL WHERE VF_ID = #{id}),
	           LAST_MODIFY_TIME = #{lastModifyTime}
	     WHERE VF_ID = #{id}
	</update>
	
	<delete id="deleteViewFilter" parameterType="int">
	    DELETE FROM NBS_VIEW_FILTER WHERE VF_ID = #{id}
	</delete>
	
	<delete id="deleteViewFilterJobList" parameterType="map">
	    DELETE FROM NBS_VIEW_FILTER_DTL WHERE VF_ID = #{id}
	    <if test="jobId != null">
	        AND JOB_ID = #{jobId}
	    </if>
	</delete>
			
	<!-- ■■■■■■■■■■■ Job Definition ■■■■■■■■■■■■■ -->

	<resultMap id="JobDefinition-ResultMap" type="nexcore.scheduler.entity.JobDefinition">
	    <id property="jobId" column="JOB_ID"/>
	    <result property="jobGroupId" column="JOB_GROUP_ID"/>
	    <result property="owner" column="OWNER"/>
	    <result property="description" column="JOB_DESC"/>
	    <result property="timeFrom" column="TIME_FROM"/>
	    <result property="timeUntil" column="TIME_UNTIL"/>
	    <result property="repeatYN" column="REPEAT_YN"/>
	    <result property="repeatIntval" column="REPEAT_INTVAL"/>
	    <result property="repeatIntvalGb" column="REPEAT_INTVAL_GB"/>
	    <result property="repeatIfError" column="REPEAT_IF_ERROR"/>
	    <result property="repeatMaxOk" column="REPEAT_MAX_OK"/>
	    <result property="repeatExactExp" column="REPEAT_EXACT_EXP"/>
	    <result property="confirmNeedYN" column="CONFIRM_NEED_YN"/>
	    <result property="parallelGroup" column="PARALLEL_GROUP"/>
	    <result property="jobType" column="JOB_TYPE"/>
	    <result property="agentNode" column="AGENT_NODE"/>
	    <result property="componentName" column="COMPONENT_NAME"/>
	    <result property="scheduleType" column="SCHEDULE_TYPE"/>
	    <result property="daysInMonth" column="DAYS_IN_MONTH"/>
	    <result property="months" column="MONTHS"/>
	    <result property="daysOfWeek" column="DAYS_OF_WEEK"/>
	    <result property="weekdayMonthdayType" column="WEEKDAY_MONTHDAY_TYPE"/>
	    <result property="calendarId" column="CALENDAR_ID"/>
	    <result property="calendarExps" column="CALENDAR_EXP"/>
	    <result property="dayOfMonthScheduleType" column="DAY_SCHEDULE_TYPE"/>
	    <result property="beforeAfterExp" column="BEFORE_AFTER_EXP"/>
	    <result property="shiftExp" column="SHIFT_EXP"/>
	    <result property="shiftExp2" column="SHIFT_EXP2"/>
	    <result property="fixedDays" column="FIXED_DAYS"/>
	    <result property="extraSchedule" column="EXTRA_SCHEDULE"/>
	    <result property="baseDateCalId" column="BASE_DATE_CAL_ID"/>
	    <result property="baseDateLogic" column="BASE_DATE_LOGIC"/>
	    <result property="logLevel" column="LOG_LEVEL"/>
	    <result property="createTime" column="CREATE_TIME"/>
	    <result property="lastModifyTime" column="LAST_MODIFY_TIME"/>
	</resultMap>
	<select id="selectJobGroupAttrDefByQuery" parameterType="map" resultMap="JobGroupAttrDef-ResultMap">
	    SELECT *
	    FROM NBS_JOBGROUP_ATTR_DEF
	    <where>
	        <if test="queryCondition != null and queryCondition != ''">
	            ${queryCondition}
	        </if>
	    </where>
	    <if test="orderBy != null and orderBy != ''">
	        ${orderBy}
	    </if>
	</select>
    
    
      <!-- ■■■■■■■■■■■■■ JobGroupAttrDef ■■■■■■■■■■■■■=== -->
	<resultMap id="JobGroupAttrDef-ResultMap" type="nexcore.scheduler.entity.JobGroupAttrDef">
	    <result property="id" column="ATTR_ID" />
	    <result property="name" column="ATTR_NAME" />
	    <result property="desc" column="ATTR_DESC" />
	    <result property="valueType" column="VALUE_TYPE" />
	    <result property="valueCheck" column="VALUE_CHECK" />
	    <result property="displayLine" column="DISPLAY_LINE" />
	    <result property="displayMonitorYN" column="DISPLAY_MONITOR" />
	    <result property="displayOrder" column="DISPLAY_ORDER" />
	    <result property="lastModifyTime" column="LAST_MODIFY_TIME" />
	</resultMap>
	
	<select id="selectJobGroupByDynamicQuery" parameterType="map" resultMap="JobGroup-ResultMap">
	    SELECT a.*, b.GROUP_ID AS OWNER_GROUP_ID, b.ATTR_ID, b.ATTR_VALUE 
	    FROM NBS_JOBGROUP a 
	    LEFT JOIN NBS_JOBGROUP_ATTR b ON a.GROUP_ID = b.GROUP_ID
	    <where>
	        <if test="groupIdLike != null and groupIdLike != ''">
	            AND a.GROUP_ID LIKE #{groupIdLike}
	        </if>
	        <if test="groupNameLike != null and groupNameLike != ''">
	            AND a.GROUP_NAME LIKE #{groupNameLike}
	        </if>
	        <if test="groupDescLike != null and groupDescLike != ''">
	            AND a.GROUP_DESC LIKE #{groupDescLike}
	        </if>
	        <if test="authorizedJobGroupIdViewList != null and authorizedJobGroupIdViewList.size() > 0">
	            AND a.GROUP_ID IN 
	            <foreach item="item" collection="authorizedJobGroupIdViewList" open="(" separator="," close=")">
	                #{item}
	            </foreach>
	        </if>
	    </where>
	    ${orderBy}
	</select>
		
	<resultMap id="JobGroup-ResultMap" type="nexcore.scheduler.entity.JobGroup">
	    <id property="id" column="GROUP_ID"/>
	    <result property="name" column="GROUP_NAME"/>
	    <result property="desc" column="GROUP_DESC"/>
	    <result property="parentId" column="PARENT_ID"/>
	    <result property="creatorId" column="CREATOR_ID"/>
	    <result property="ownerId" column="OWNER_ID"/>
	    <result property="createTime" column="CREATE_TIME"/>
	    <result property="lastModifyTime" column="LAST_MODIFY_TIME"/>
	    <collection property="attributeList" resultMap="nbs.monitor.JobGroupAttr-ResultMap"/>
	</resultMap>
	
	<select id="selectAgentInfoCountByQuery" parameterType="map" resultType="int">
	    SELECT COUNT(*) AS CNT
	    FROM NBS_AGENT
        <if test="queryCondition != null and queryCondition != ''">
            ${queryCondition}
        </if>
	</select>
	<insert id="insertAgentInfo" parameterType="nexcore.scheduler.entity.AgentInfo">
	    INSERT INTO NBS_AGENT (
	        AGENT_ID, AGENT_NAME, AGENT_DESC, AGENT_IP, AGENT_PORT, 
	        RUN_MODE, IN_USE, BASE_DIRECTORY, OS_USERID, OS_PASSWD, 
	        START_CMD, REMOTE_START_TYPE, MAX_RUNNING_JOB, LAST_MODIFY_TIME
	    ) VALUES (
	        #{id}, #{name, jdbcType=VARCHAR}, #{desc, jdbcType=VARCHAR}, 
	        #{ip, jdbcType=VARCHAR}, #{port}, #{runMode, jdbcType=VARCHAR}, 
	        #{inUseYN, jdbcType=VARCHAR}, #{baseDirectory, jdbcType=VARCHAR}, 
	        #{osUserId, jdbcType=VARCHAR}, #{osPasswd, jdbcType=VARCHAR}, 
	        #{startCmd, jdbcType=VARCHAR}, #{remoteStartType, jdbcType=VARCHAR}, 
	        #{maxRunningJob}, #{lastModifyTime}
	    )
	</insert>
	<delete id="deleteAgentInfo" parameterType="string">
	    DELETE FROM NBS_AGENT WHERE AGENT_ID = #{id}
	</delete>
	
	<select id="selectJobGroupByQuery" parameterType="map" resultMap="JobGroup-ResultMap">
	    SELECT a.*, b.GROUP_ID AS OWNER_GROUP_ID, b.ATTR_ID, b.ATTR_VALUE
	    FROM NBS_JOBGROUP a
	    LEFT JOIN NBS_JOBGROUP_ATTR b ON a.GROUP_ID = b.GROUP_ID
	    <if test="queryCondition != null and queryCondition != ''">
	        ${queryCondition}
	    </if>
	    <if test="orderBy != null and orderBy != ''">
	        ${orderBy}
	    </if>
	</select>
		
	<insert id="insertJobGroup" parameterType="nexcore.scheduler.entity.JobGroup">
	    INSERT INTO NBS_JOBGROUP
	        (GROUP_ID, GROUP_NAME, GROUP_DESC, PARENT_ID, CREATOR_ID, OWNER_ID, CREATE_TIME, LAST_MODIFY_TIME)
	    VALUES
	        (#{id}, #{name, jdbcType=VARCHAR}, #{desc, jdbcType=VARCHAR}, 
	         #{parentId, jdbcType=VARCHAR}, #{creatorId, jdbcType=VARCHAR}, 
	         #{ownerId, jdbcType=VARCHAR}, #{createTime, jdbcType=VARCHAR}, 
	         #{lastModifyTime, jdbcType=VARCHAR})
	</insert>

	<resultMap id="JobGroupAttr-ResultMap" type="nexcore.scheduler.entity.JobGroupAttr">
	    <result property="groupId" column="OWNER_GROUP_ID"/>
	    <result property="id" column="ATTR_ID"/>
	    <result property="value" column="ATTR_VALUE"/>
	</resultMap>
	<delete id="deleteJobGroup" parameterType="string">
	    DELETE FROM NBS_JOBGROUP WHERE GROUP_ID = #{id}
	</delete>
	<delete id="deleteJobGroupAttr" parameterType="string">
	    DELETE FROM NBS_JOBGROUP_ATTR WHERE GROUP_ID = #{id}
	</delete>


	<insert id="insertUser" parameterType="nexcore.scheduler.entity.User">
	    INSERT INTO NBS_USER
	        (USER_ID, USER_PASSWD, USER_NAME, USER_DESC, TEAM1, TEAM2, EMAIL, PHONE, IS_ADMIN, 
	         IS_OPERATOR, IS_ACTIVE, OPER_JOB_ID_EXP, CREATE_TIME, LAST_MODIFY_TIME)
	    VALUES 
	        (#{id}, #{password}, #{name}, #{desc, jdbcType=VARCHAR}, #{team1, jdbcType=VARCHAR}, 
	         #{team2, jdbcType=VARCHAR}, #{email, jdbcType=VARCHAR}, #{phone, jdbcType=VARCHAR}, 
	         #{adminYN}, #{operatorYN}, #{activeYN}, #{operateJobIdExp, jdbcType=VARCHAR}, 
	         #{createTime}, #{lastModifyTime})
	</insert>
	<delete id="deleteUser" parameterType="string">
	    DELETE FROM NBS_USER WHERE USER_ID = #{id}
	</delete>
	
	<delete id="deleteUserAuth" parameterType="string">
	    DELETE FROM NBS_USER_AUTH WHERE USER_ID = #{id}
	</delete>

</mapper>
